#! /usr/bin/env bash

# set -x

if [[ -t 0 ]]; then
    LIGHTPURPLE='\033[1;35m'    # Repo doesn't exist or is not a git repo.
    LIGHTCYAN='\033[1;36m'      # Repo name (and prefix).
    YELLOW='\033[1;33m'         # Repo may need pushed.
    RED='\033[1;31m'            # Repo may need checkin
    NC='\033[0m' # No Color
fi

PROG="$0"

QUIET=

((errors=0))
while getopts "q" opt
do
    case "$opt" in
        (\?) ((errors++)) ;;
        (q) QUIET=true ;;
    esac
done
((errors > 0)) && {
    cat <<EOF
usage: $PROG [-q]
Where
-q      Run in quiet mode.
EOF
    exit 2
}


mygitrepos | while read repo 
do
    if [[ ! -d $repo ]]                                    # Repo doesn't exist
    then
        printf "$LIGHTPURPLE===> $repo does not exist!!!$NC\n"
    else
        if [[ ! -d $repo/.git ]]                  # Directory is not a git repo
        then
            printf "$LIGHTPURPLE===> $repo is not a git repo!!!$NC\n"
        else
            if [[ -z "$QUIET" ]]                          # Use quiet reporting
            then
                STATUS="$(cd $repo && git status --short)"
                if [[ -n "$STATUS" ]]; then
                    printf "$LIGHTCYAN===> $repo ${RED}may need checkin!!!$NC\n"
                    printf "%s\n" "$STATUS"
                fi
            else
                if [[ -n "$(cd $repo && git status --short)" ]]; then
                    printf "$LIGHTCYAN===> $repo ${RED}may need checkin!!!$NC\n"
                fi
            fi
            if [[ -n "$(cd $repo && git status | grep 'Your branch is ahead')" ]]; then
                printf "$LIGHTCYAN===> $repo ${YELLOW}may need pushed!!!$NC\n"
            fi
        fi                                        # directory is not a git repo
    fi                                                      # Repo doesn't exit
done

