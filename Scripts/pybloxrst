#! /usr/bin/env python
#!> pybloxrst - convert pybloxsom rst posts to plain rst.
## FIXME: Does this actually work well as a filter???
import os, sys

assert len (sys.argv) <= 3, "usage: pybloxrst [infile [outfile]]"

outfilename = None

if len (sys.argv) > 1:
    filename = sys.argv[1]
    infile = open (filename, 'rb')
else:
    infile = sys.stdin

if len (sys.argv) == 3:
    assert sys.argv[1] != sys.argv[2], ("input %s is same as output %s" %
                                        (sys.argv[1], sys.argv[2]))
    outfilename = sys.argv[2]
    outfile = open (outfilename, 'wb')
else:
    outfile = sys.stdout


lineno = 0
for line in infile:
    lineno += 1
    if lineno == 1:
        underline = '=' * len (line)
        outfile.write ("%s\n" % underline)
        outfile.write ("%s" % line)
        outfile.write ("%s\n" % underline)
    elif lineno == 2 and line[:10] == '#published':
        line = line[10:].strip ()
        outfile.write (":Date: %s\n" % line)
    elif lineno == 3 and line[:5] == '#tags':
        line = ':Tags: ' + line[5:].strip ()
        outfile.write ("%s\n" % line)
    else:
        outfile.write ("%s" % line)

if infile != sys.stdin:   infile.close ()
if outfile != sys.stdout: outfile.close ()


exit ()

r""" Originally this was an awk script
grep -v "^#" "$@" | awk '
BEGIN { x = 0; } 
FNR == 1 { 
  x = length($0)
  print
  for (i = 0; i < x; i++)
    printf "="
  printf "\n"
}
FNR != 1 { print; }
'
"""
